class Solution {
    public boolean isUnivalTree(TreeNode root) {
        if (root.left != null) {
            if (!isUnivalTree(root.left))
                return false;
            if (root.left.val != root.val)
                return false;
        }

        if (root.right != null) {
            if (!isUnivalTree(root.right))
                return false;
            if (root.right.val != root.val)
                return false;
        }
        return true;
    }
}

// method 2:
class Solution {
    public boolean isUnivalTree(TreeNode root) {
        if(root == null) return true;
        return dfs(root);
    }
    
    private boolean dfs(TreeNode root) {
        if(root == null) return true;
        if(root.left != null)
            if(root.val != root.left.val)
                return false;
        if(root.right != null)
            if(root.val != root.right.val)
                return false;
        return dfs(root.left) && dfs(root.right);
    }
}
